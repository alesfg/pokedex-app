{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useQuery, gql } from '@apollo/client';\nimport { backgroundColors, stats, emojis } from \"../assets/colors\";\nimport pokeball_bg from \"../assets/pokeball_bg.png\";\nimport pokegif from \"../assets/image11.gif\";\nimport { translateHabitat, translateType } from \"../assets/translate\";\nimport * as Speech from 'expo-speech';\nimport { AntDesign } from '@expo/vector-icons';\nimport { color } from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var GET_DETALLES = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\nquery getDetalles($_eq: Int) {\\n  pokemon_v2_pokemonspecies(where: {id: {_eq: $_eq}}) {\\n    pokemon_v2_pokemonspeciesflavortexts(where: {language_id: {_eq: 7}}, limit: 1) {\\n      flavor_text\\n    }\\n    pokemon_v2_pokemonhabitat {\\n      name\\n    }\\n    pokemon_v2_pokemonshape {\\n      name\\n    }\\n    pokemon_v2_pokemonspeciesnames(where: {language_id: {_eq: 7}}) {\\n      genus\\n    }\\n    name\\n    pokemon_v2_pokemons_aggregate {\\n      nodes {\\n        pokemon_v2_pokemonstats {\\n          base_stat\\n          pokemon_v2_stat {\\n            name\\n          }\\n        }\\n      }\\n    }\\n    pokemon_v2_pokemons(where: {id: {_eq: $_eq}}) {\\n      pokemon_v2_pokemontypes {\\n        pokemon_v2_type {\\n          name\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n\"])));\n\nvar PokemonDetails = function PokemonDetails(_ref) {\n  var _Object$keys3;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  console.log(\"Detalles\");\n  console.log(route.params);\n  var id = route.params.id;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      types = _useState2[0],\n      settypes = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setname = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      genus = _useState6[0],\n      setgenus = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      flavor = _useState8[0],\n      setflavor = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      habitat = _useState10[0],\n      sethabitat = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      hp = _useState12[0],\n      sethp = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      attack = _useState14[0],\n      setattack = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      defense = _useState16[0],\n      setdefense = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      speed = _useState18[0],\n      setspeed = _useState18[1];\n\n  var _useQuery = useQuery(GET_DETALLES, {\n    variables: {\n      \"_eq\": id\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var Progress = function Progress(_ref2) {\n    var step = _ref2.step,\n        stat = _ref2.stat,\n        height = _ref2.height;\n    return _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 14,\n          fontWeight: 'bold',\n          marginBottom: 8,\n          width: 30\n        },\n        children: step\n      }), _jsx(View, {\n        style: {\n          height: height,\n          backgroundColor: 'rgba(0,0,0,0.1)',\n          borderTopEndRadiusRadius: height,\n          borderTopRightRadius: height,\n          overflow: 'hidden',\n          width: 110,\n          alignSelf: 'center'\n        },\n        children: _jsx(View, {\n          style: {\n            height: height,\n            width: step,\n            borderTopEndRadiusRadius: height,\n            borderTopRightRadius: height,\n            backgroundColor: stats[stat],\n            overflow: 'hidden',\n            position: 'absolute',\n            left: 0,\n            top: 0\n          }\n        })\n      })]\n    });\n  };\n\n  var imageUri = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\" + id + \".png\";\n  var tinyImgUri = \"https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/\" + id + \".png\";\n\n  var speak = function speak() {\n    Speech.speak(name + \".\" + data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesflavortexts[0].flavor_text, {\n      rate: 1.1,\n      language: 'es-ES',\n      pitch: 1,\n      voice: \"es-es-x-eed-network\"\n    });\n  };\n\n  if (!loading) {\n    var _Object$keys;\n\n    if (data && ((_Object$keys = Object.keys(data)) == null ? void 0 : _Object$keys.length) > 0 && name != undefined) {\n      speak();\n    }\n  }\n\n  useEffect(function () {\n    var _route$params, _Object$keys2;\n\n    if ((_route$params = route.params) != null && _route$params.type) {\n      settypes([route.params.type]);\n    }\n\n    if (data && ((_Object$keys2 = Object.keys(data)) == null ? void 0 : _Object$keys2.length) > 0) {\n      var _data$pokemon_v2_poke, _data$pokemon_v2_poke2;\n\n      setname(data.pokemon_v2_pokemonspecies[0].name);\n      settypes([data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons[0].pokemon_v2_pokemontypes[0].pokemon_v2_type.name, (_data$pokemon_v2_poke = data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons[0].pokemon_v2_pokemontypes[1]) == null ? void 0 : _data$pokemon_v2_poke.pokemon_v2_type.name]);\n      setflavor(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesflavortexts[0].flavor_text.replace(/\\s+/g, ' ').replace(\".\", \".\\n\"));\n      setgenus(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesnames[0].genus);\n      sethabitat((_data$pokemon_v2_poke2 = data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonhabitat) == null ? void 0 : _data$pokemon_v2_poke2.name);\n      sethp(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[0].base_stat);\n      setattack(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[1].base_stat);\n      setdefense(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[2].base_stat);\n      setspeed(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[5].base_stat);\n    }\n\n    if (Speech.isSpeakingAsync) {\n      Speech.stop();\n    }\n  }, [data]);\n  useEffect(function () {\n    navigation.addListener('beforeRemove', function (e) {\n      Speech.stop();\n    });\n  }, [navigation]);\n\n  var goPokemonList = function goPokemonList() {\n    navigation.navigate(\"Bear Pokedex\");\n  };\n\n  var goNextPokemon = function goNextPokemon() {\n    navigation.push(\"Pokemon Info\", {\n      id: id + 1\n    });\n  };\n\n  var goPreviousPokemon = function goPreviousPokemon() {\n    navigation.push(\"Pokemon Info\", {\n      id: id - 1\n    });\n  };\n\n  return _jsxs(View, {\n    style: [styles.screen, {\n      backgroundColor: backgroundColors[types[0]]\n    }],\n    children: [_jsxs(View, {\n      style: [styles.name],\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: goPokemonList,\n          children: _jsx(AntDesign, {\n            name: \"arrowleft\",\n            size: 30,\n            color: \"#fff\"\n          })\n        }), !loading && name != undefined ? _jsx(Text, {\n          style: {\n            fontWeight: 'bold',\n            fontSize: 24,\n            color: \"white\",\n            paddingLeft: 10\n          },\n          children: name.charAt(0).toUpperCase() + name.slice(1)\n        }) : _jsx(View, {})]\n      }), _jsxs(Text, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: 24,\n          color: \"white\",\n          alignSelf: 'flex-end',\n          paddingRight: 30\n        },\n        children: [\"#\", id]\n      })]\n    }), _jsx(View, {\n      style: {\n        opacity: 0.15,\n        paddingTop: 30\n      },\n      children: _jsx(ImageBackground, {\n        source: pokeball_bg,\n        style: {\n          width: 200,\n          height: 160,\n          alignSelf: 'flex-end'\n        },\n        resizeMode: \"contain\"\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        width: '100%',\n        justifyContent: 'space-between',\n        paddingHorizontal: 70,\n        paddingBottom: 30\n      },\n      children: [id > 1 && _jsx(TouchableOpacity, {\n        style: {\n          alignSelf: 'flex-start'\n        },\n        onPress: function onPress() {\n          return goPreviousPokemon();\n        },\n        children: _jsx(AntDesign, {\n          name: \"left\",\n          size: 24,\n          color: \"#fff\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          right: 0,\n          position: 'absolute',\n          paddingRight: 70\n        },\n        onPress: function onPress() {\n          return goNextPokemon();\n        },\n        children: _jsx(AntDesign, {\n          name: \"right\",\n          size: 24,\n          color: \"#fff\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.infoCard,\n      children: [_jsx(View, {\n        children: _jsx(Image, {\n          source: {\n            uri: imageUri\n          },\n          style: styles.image,\n          resizeMode: \"contain\"\n        })\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        children: [_jsx(View, {\n          children: types[0] && _jsxs(Text, {\n            style: [styles.type, {\n              backgroundColor: backgroundColors[types[0]]\n            }],\n            children: [\" \", translateType(types[0]), \" \"]\n          })\n        }), _jsx(View, {\n          children: types[1] && _jsxs(Text, {\n            style: [styles.type, {\n              backgroundColor: backgroundColors[types[1]]\n            }],\n            children: [\" \", translateType(types[1]), \" \"]\n          })\n        })]\n      }), !(data && ((_Object$keys3 = Object.keys(data)) == null ? void 0 : _Object$keys3.length) > 0) ? _jsx(View, {\n        children: _jsx(Image, {\n          source: pokegif,\n          style: {\n            height: 179,\n            width: 320,\n            marginTop: 100\n          }\n        })\n      }) : _jsxs(View, {\n        children: [_jsxs(Text, {\n          style: {\n            color: backgroundColors[types[0]],\n            fontWeight: 'bold',\n            fontSize: 20,\n            padding: 18,\n            textAlign: 'center'\n          },\n          children: [types[1] && emojis[types[1]], \" \", genus, \" \", emojis[types[0]]]\n        }), _jsx(Text, {\n          selectable: true,\n          selectionColor: 'gray',\n          children: flavor\n        }), _jsxs(View, {\n          style: {\n            marginTop: 20,\n            marginBottom: 10\n          },\n          children: [_jsxs(View, {\n            style: styles.row,\n            children: [_jsx(Text, {\n              style: [styles.stats, {\n                color: stats['hp']\n              }],\n              children: \"PV\"\n            }), _jsx(Progress, {\n              step: hp,\n              stat: 'hp',\n              height: 6\n            })]\n          }), _jsxs(View, {\n            style: styles.row,\n            children: [_jsx(Text, {\n              style: [styles.stats, {\n                color: stats['attack']\n              }],\n              children: \"Ataque\"\n            }), _jsx(Progress, {\n              step: attack,\n              stat: 'attack',\n              height: 6\n            })]\n          }), _jsxs(View, {\n            style: styles.row,\n            children: [_jsx(Text, {\n              style: [styles.stats, {\n                color: stats['defense']\n              }],\n              children: \"Defensa\"\n            }), _jsx(Progress, {\n              step: defense,\n              stat: 'defense',\n              height: 6\n            })]\n          }), _jsxs(View, {\n            style: styles.row,\n            children: [_jsx(Text, {\n              style: [styles.stats, {\n                color: stats['speed']\n              }],\n              children: \"Velocidad\"\n            }), _jsx(Progress, {\n              step: speed,\n              stat: 'speed',\n              height: 6\n            })]\n          })]\n        }), _jsx(View, {\n          style: styles.imageContainer,\n          children: _jsx(Image, {\n            source: {\n              uri: tinyImgUri\n            },\n            style: styles.sprite,\n            resizeMode: \"contain\"\n          })\n        }), _jsxs(Text, {\n          style: styles.habitat,\n          children: [\"Habita en \", translateHabitat(habitat)]\n        })]\n      })]\n    })]\n  });\n};\n\nexport default PokemonDetails;\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar styles = StyleSheet.create({\n  screen: {\n    height: height,\n    width: width,\n    alignSelf: 'center',\n    flex: 1\n  },\n  name: {\n    paddingTop: 45,\n    paddingLeft: 21,\n    flexDirection: \"row\",\n    justifyContent: 'space-between'\n  },\n  infoCard: {\n    margin: 10,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    alignItems: 'center',\n    padding: 20\n  },\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    height: 30,\n    alignItems: 'center'\n  },\n  stats: {\n    left: 0,\n    marginLeft: 1,\n    marginRight: 1,\n    width: '50%',\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginTop: -170\n  },\n  sprite: {\n    width: 20,\n    height: 20\n  },\n  imageContainer: {\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  type: {\n    borderRadius: 10,\n    padding: 5,\n    marginHorizontal: 5,\n    textTransform: 'capitalize'\n  },\n  habitat: {\n    paddingTop: 5,\n    fontFamily: 'monospace'\n  }\n});","map":{"version":3,"sources":["D:/Expo/pokedex-app/components/PokemonDetails.js"],"names":["React","useState","useEffect","useQuery","gql","backgroundColors","stats","emojis","pokeball_bg","pokegif","translateHabitat","translateType","Speech","AntDesign","color","GET_DETALLES","PokemonDetails","route","navigation","console","log","params","id","types","settypes","name","setname","genus","setgenus","flavor","setflavor","habitat","sethabitat","hp","sethp","attack","setattack","defense","setdefense","speed","setspeed","variables","loading","error","data","Progress","step","stat","height","fontSize","fontWeight","marginBottom","width","backgroundColor","borderTopEndRadiusRadius","borderTopRightRadius","overflow","alignSelf","position","left","top","imageUri","tinyImgUri","speak","pokemon_v2_pokemonspecies","pokemon_v2_pokemonspeciesflavortexts","flavor_text","rate","language","pitch","voice","Object","keys","length","undefined","type","pokemon_v2_pokemons","pokemon_v2_pokemontypes","pokemon_v2_type","replace","pokemon_v2_pokemonspeciesnames","pokemon_v2_pokemonhabitat","pokemon_v2_pokemons_aggregate","nodes","pokemon_v2_pokemonstats","base_stat","isSpeakingAsync","stop","addListener","e","goPokemonList","navigate","goNextPokemon","push","goPreviousPokemon","styles","screen","flexDirection","paddingLeft","charAt","toUpperCase","slice","paddingRight","opacity","paddingTop","justifyContent","paddingHorizontal","paddingBottom","right","infoCard","uri","image","marginTop","padding","textAlign","row","imageContainer","sprite","Dimensions","get","StyleSheet","create","flex","margin","borderRadius","alignItems","flexWrap","marginLeft","marginRight","marginHorizontal","textTransform","fontFamily"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, Text, View, Image, ImageBackground, Dimensions, TouchableOpacity } from 'react-native'\r\n\r\n\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { backgroundColors, stats, emojis } from '../assets/colors'\r\nimport pokeball_bg from '../assets/pokeball_bg.png'\r\nimport pokegif from '../assets/image11.gif'\r\nimport { translateHabitat, translateType } from '../assets/translate'\r\n\r\nimport * as Speech from 'expo-speech';\r\nimport { AntDesign } from '@expo/vector-icons'; \r\nimport { color } from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\r\n\r\n\r\nexport const GET_DETALLES = gql`\r\nquery getDetalles($_eq: Int) {\r\n  pokemon_v2_pokemonspecies(where: {id: {_eq: $_eq}}) {\r\n    pokemon_v2_pokemonspeciesflavortexts(where: {language_id: {_eq: 7}}, limit: 1) {\r\n      flavor_text\r\n    }\r\n    pokemon_v2_pokemonhabitat {\r\n      name\r\n    }\r\n    pokemon_v2_pokemonshape {\r\n      name\r\n    }\r\n    pokemon_v2_pokemonspeciesnames(where: {language_id: {_eq: 7}}) {\r\n      genus\r\n    }\r\n    name\r\n    pokemon_v2_pokemons_aggregate {\r\n      nodes {\r\n        pokemon_v2_pokemonstats {\r\n          base_stat\r\n          pokemon_v2_stat {\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n    pokemon_v2_pokemons(where: {id: {_eq: $_eq}}) {\r\n      pokemon_v2_pokemontypes {\r\n        pokemon_v2_type {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\n\r\n\r\nconst PokemonDetails = ({ route, navigation }) => {\r\n  \r\n  console.log(\"Detalles\")\r\n  console.log(route.params)\r\n  const { id } = route.params\r\n  const [types, settypes] = useState([])\r\n  const [name, setname] = useState()\r\n  const [genus, setgenus] = useState()\r\n  const [flavor, setflavor] = useState()\r\n  const [habitat, sethabitat] = useState()\r\n  const [hp, sethp] = useState()\r\n  const [attack, setattack] = useState()\r\n  const [defense, setdefense] = useState()\r\n  const [speed, setspeed] = useState()\r\n  \r\n  const { loading, error, data } = useQuery(GET_DETALLES, {\r\n    variables: { \"_eq\": id },\r\n  });\r\n  \r\n  const Progress = ({step,stat,height}) => {\r\n    return (\r\n      <>\r\n      <Text style={{fontSize:14, fontWeight: 'bold', marginBottom:8,width:30}}>{step}</Text>\r\n      <View style={{\r\n        height,\r\n        backgroundColor:'rgba(0,0,0,0.1)',\r\n        borderTopEndRadiusRadius: height,\r\n        borderTopRightRadius: height,\r\n        overflow:'hidden',\r\n        width:110,\r\n        alignSelf:'center',\r\n      }}>\r\n        <View style={{\r\n        height,\r\n        width:step,\r\n        borderTopEndRadiusRadius: height,\r\n        borderTopRightRadius: height,\r\n        backgroundColor:stats[stat],\r\n        overflow:'hidden',\r\n        position:'absolute',\r\n        left:0,\r\n        top:0\r\n      }}></View>\r\n      </View>\r\n      </>\r\n    )\r\n  } \r\n\r\n  const imageUri = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`\r\n\r\n  const tinyImgUri = `https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${id}.png`\r\n\r\n\r\n  const speak = () => {\r\n    Speech.speak(name + \".\" +\r\n    data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesflavortexts[0].flavor_text, {\r\n      rate: 1.1,\r\n      language: 'es-ES',\r\n      pitch: 1,\r\n      voice: \"es-es-x-eed-network\"\r\n    });\r\n  };\r\n  if(!loading){\r\n    if(data && Object.keys(data)?.length>0 && name!=undefined){\r\n      speak();\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(route.params?.type){\r\n      settypes([route.params.type])\r\n    }\r\n    if(data && Object.keys(data)?.length>0){\r\n      setname(data.pokemon_v2_pokemonspecies[0].name)\r\n      settypes([data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons[0].pokemon_v2_pokemontypes[0].pokemon_v2_type.name , data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons[0].pokemon_v2_pokemontypes[1]?.pokemon_v2_type.name])\r\n      setflavor(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesflavortexts[0].flavor_text.replace(/\\s+/g, ' ').replace(\".\",\".\\n\"))\r\n      setgenus(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesnames[0].genus)\r\n      sethabitat(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonhabitat?.name)\r\n      sethp(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[0].base_stat)\r\n      setattack(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[1].base_stat)\r\n      setdefense(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[2].base_stat)\r\n      setspeed(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[5].base_stat)\r\n    }\r\n    if(Speech.isSpeakingAsync){\r\n      Speech.stop()\r\n    }\r\n  }, [data])\r\n  \r\n  useEffect(() => {\r\n    navigation.addListener('beforeRemove', (e) => {\r\n      Speech.stop()\r\n    }\r\n  )}, [navigation])\r\n  \r\n  const goPokemonList = () => {navigation.navigate(\"Bear Pokedex\")}\r\n  const goNextPokemon = () => {navigation.push(\"Pokemon Info\", {\r\n    id : id+1\r\n  })}\r\n  const goPreviousPokemon = () => {navigation.push(\"Pokemon Info\", {\r\n    id : id-1\r\n  })}\r\n\r\n  return (\r\n    <View style={[styles.screen, { backgroundColor: backgroundColors[types[0]] }]}>\r\n      <View style={[styles.name]}>\r\n        <View style={{flexDirection: \"row\"}}>\r\n\r\n      <TouchableOpacity\r\n        onPress={goPokemonList}\r\n        >\r\n        <AntDesign name=\"arrowleft\" size={30} color=\"#fff\" />\r\n      </TouchableOpacity>\r\n      {!loading && name !=undefined ?\r\n      <Text style={{ fontWeight: 'bold', fontSize: 24, color: \"white\",paddingLeft:10 }}>\r\n          {name.charAt(0).toUpperCase() + name.slice(1)}\r\n        </Text>\r\n        \r\n        :\r\n        <View></View>\r\n      }\r\n      </View>\r\n      <Text style={{fontWeight: 'bold', fontSize: 24, color: \"white\",alignSelf:'flex-end',paddingRight:30}}>#{id}</Text>\r\n      </View>\r\n      <View style={{ opacity: 0.15, paddingTop: 30 }}>\r\n        <ImageBackground source={pokeball_bg} style={{\r\n          width: 200, height: 160, alignSelf: 'flex-end'\r\n        }}\r\n          resizeMode='contain'\r\n        />\r\n      </View>\r\n      <View style={{ flexDirection: 'row',width:'100%', justifyContent: 'space-between',paddingHorizontal:70,paddingBottom:30 }}>\r\n            {id > 1 &&\r\n             <TouchableOpacity style={{alignSelf:'flex-start'}}\r\n              onPress={()=>goPreviousPokemon()}\r\n              >\r\n                <AntDesign name=\"left\" size={24} color=\"#fff\" />\r\n            </TouchableOpacity>}\r\n            \r\n            <TouchableOpacity style={{right:0,position:'absolute', paddingRight:70}}\r\n            onPress={()=>goNextPokemon()}\r\n            >\r\n              <AntDesign name=\"right\" size={24} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.infoCard}>\r\n      \r\n        <View >\r\n          <Image source={{ uri: imageUri }} style={styles.image} resizeMode='contain' />\r\n        </View>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <View>\r\n            {types[0] && <Text style={[styles.type, { backgroundColor: backgroundColors[types[0]] }]}> {translateType(types[0])} </Text>}\r\n          </View>\r\n          <View>\r\n            {types[1] && <Text style={[styles.type, { backgroundColor: backgroundColors[types[1]] }]}> {translateType(types[1])} </Text>}\r\n          </View>\r\n        </View>\r\n        \r\n        {!(data && Object.keys(data)?.length>0) ?\r\n        <View>\r\n         <Image\r\n         source={pokegif}\r\n         style={{\r\n           height: 179,\r\n           width: 320,\r\n           marginTop:100\r\n         }}\r\n         />\r\n         </View>\r\n         :\r\n           <View>\r\n          <Text style={{ color: backgroundColors[types[0]], fontWeight: 'bold', fontSize: 20, padding: 18, textAlign:'center' }}>\r\n          {types[1] && emojis[types[1]]} {genus} {emojis[types[0]]}\r\n          </Text>\r\n            <Text selectable={true} selectionColor={'gray'}>\r\n              {flavor}\r\n            </Text>\r\n\r\n            {/* Aqui poner STATS */}\r\n            <View style={{marginTop:20,marginBottom:10}}>\r\n              <View style={styles.row}>\r\n                <Text style={[styles.stats,{color:stats['hp']}]}>PV</Text>\r\n                <Progress step={hp} stat={'hp'} height={6}/>\r\n              </View>\r\n              <View style={styles.row}>\r\n                <Text style={[styles.stats,{color:stats['attack']}]}>Ataque</Text>\r\n                <Progress step={attack} stat={'attack'} height={6}/>\r\n              </View>\r\n              <View style={styles.row}>\r\n                <Text style={[styles.stats,{color:stats['defense']}]}>Defensa</Text>\r\n                <Progress step={defense} stat={'defense'} height={6}/>\r\n              </View>\r\n              <View style={styles.row}>\r\n                <Text style={[styles.stats,{color:stats['speed']}]}>Velocidad</Text>\r\n                <Progress step={speed} stat={'speed'} height={6}/>\r\n              </View>\r\n            </View>\r\n         {/* SPRITES */}\r\n         <View style={styles.imageContainer}>\r\n          <Image source={{ uri: tinyImgUri }} style={styles.sprite} resizeMode='contain' />\r\n        </View>\r\n         {/* HABITAT */}\r\n            <Text style={styles.habitat}>\r\n              Habita en {translateHabitat(habitat)}\r\n            </Text>\r\n          </View>\r\n        }\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default PokemonDetails\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    height: height,\r\n    width: width,\r\n    alignSelf: 'center',\r\n    flex: 1\r\n  },\r\n  name: {\r\n    paddingTop: 45,\r\n    paddingLeft: 21,\r\n    flexDirection: \"row\",\r\n    justifyContent: 'space-between'\r\n  },\r\n  infoCard: {\r\n    margin: 10,\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    // flex:1\r\n    // height:400\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    height:30,\r\n    alignItems:'center'\r\n  },\r\n  stats:{\r\n    left:0,\r\n    marginLeft:1,\r\n    marginRight:1,\r\n    width:'50%',\r\n    fontWeight: \"bold\",\r\n    fontSize:16\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 200,\r\n    marginTop: -170\r\n  },\r\n  sprite: {\r\n    width: 20,\r\n    height: 20\r\n  },\r\n  imageContainer: {\r\n    justifyContent: 'center',\r\n    alignSelf: 'center'\r\n  },\r\n  type: {\r\n    borderRadius: 10,\r\n    padding: 5,\r\n    marginHorizontal: 5,\r\n    textTransform: 'capitalize'\r\n  },\r\n  habitat: {\r\n    paddingTop: 5,\r\n    fontFamily:'monospace'\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}