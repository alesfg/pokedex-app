{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useQuery, gql } from '@apollo/client';\nimport { QueryResult } from \"./query-result\";\nimport { backgroundColors } from \"../assets/colors\";\nimport pokeball_bg from \"../assets/pokeball_bg.png\";\nimport { translateType } from \"../assets/translate\";\nimport * as Speech from 'expo-speech';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var GET_DETALLES = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\nquery getDetalles($_eq: Int) {\\n  pokemon_v2_pokemonspecies(where: {id: {_eq: $_eq}}) {\\n    pokemon_v2_pokemonspeciesflavortexts(where: {language_id: {_eq: 7}}, limit: 1) {\\n      flavor_text\\n    }\\n    pokemon_v2_pokemonhabitat {\\n      name\\n    }\\n    pokemon_v2_pokemons {\\n      weight\\n    }\\n    pokemon_v2_pokemonshape {\\n      name\\n    }\\n    pokemon_v2_pokemonspeciesnames(where: {language_id: {_eq: 7}}) {\\n      genus\\n    }\\n  }\\n}\\n\"])));\n\nvar PokemonDetails = function PokemonDetails(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n      item = _route$params.item,\n      type = _route$params.type;\n  var id = item.id,\n      name = item.name;\n\n  var _useQuery = useQuery(GET_DETALLES, {\n    variables: {\n      \"_eq\": id\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  console.log(data);\n  var imageUri = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\" + id + \".png\";\n  var types = item.pokemon_v2_pokemontypes.map(function (e) {\n    return e.pokemon_v2_type.name;\n  });\n\n  var speak = function speak() {\n    Speech.speak(name + \".\" + genus + \".\", {\n      rate: 1.1,\n      language: 'es-ES',\n      pitch: 1,\n      voice: \"es-es-x-eed-network\"\n    });\n  };\n\n  return _jsxs(View, {\n    style: ([styles.screen], {\n      backgroundColor: backgroundColors[type]\n    }),\n    children: [_jsx(View, {\n      style: {\n        opacity: 0.15.toExponential,\n        paddingTop: 20\n      },\n      children: _jsx(ImageBackground, {\n        source: pokeball_bg,\n        style: {\n          width: 200,\n          height: 160,\n          alignSelf: 'flex-end'\n        },\n        resizeMode: \"contain\"\n      })\n    }), _jsxs(View, {\n      style: styles.infoCard,\n      children: [_jsx(View, {\n        children: _jsx(Image, {\n          source: {\n            uri: imageUri\n          },\n          style: styles.image,\n          resizeMode: \"contain\"\n        })\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        children: [_jsx(View, {\n          children: types[0] && _jsxs(Text, {\n            style: [styles.type, {\n              backgroundColor: backgroundColors[types[0]]\n            }],\n            children: [\" \", translateType(types[0]), \" \"]\n          })\n        }), _jsx(View, {\n          children: types[1] && _jsxs(Text, {\n            style: [styles.type, {\n              backgroundColor: backgroundColors[types[1]]\n            }],\n            children: [\" \", translateType(types[1]), \" \"]\n          })\n        })]\n      }), loading ? _jsx(Text, {\n        children: \"Cargando...\"\n      }) : _jsx(Text, {\n        style: {\n          color: backgroundColors[type],\n          fontWeight: 'bold',\n          fontSize: 20,\n          padding: 20\n        },\n        children: data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesnames[0].genus\n      }), loading ? _jsx(Text, {\n        children: \"POKEMON\"\n      }) : _jsx(Text, {\n        style: {\n          fontStyle: 'italic',\n          fontSize: 14\n        },\n        selectable: true,\n        selectionColor: 'gray',\n        children: data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesflavortexts[0].flavor_text\n      })]\n    })]\n  });\n};\n\nexport default PokemonDetails;\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar styles = StyleSheet.create({\n  screen: {\n    height: height,\n    alignSelf: 'center',\n    flex: 1\n  },\n  infoCard: {\n    margin: 10,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    alignItems: 'center',\n    padding: 20\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginTop: -170\n  },\n  imageContainer: {\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  type: {\n    borderRadius: 10,\n    padding: 5,\n    marginHorizontal: 5,\n    textTransform: 'capitalize'\n  }\n});","map":{"version":3,"sources":["D:/Expo/pokedex-app/components/PokemonDetails.js"],"names":["React","useState","useEffect","useQuery","gql","QueryResult","backgroundColors","pokeball_bg","translateType","Speech","GET_DETALLES","PokemonDetails","route","params","item","type","id","name","variables","loading","error","data","console","log","imageUri","types","pokemon_v2_pokemontypes","map","e","pokemon_v2_type","speak","genus","rate","language","pitch","voice","styles","screen","backgroundColor","opacity","toExponential","paddingTop","width","height","alignSelf","infoCard","uri","image","flexDirection","color","fontWeight","fontSize","padding","pokemon_v2_pokemonspecies","pokemon_v2_pokemonspeciesnames","fontStyle","pokemon_v2_pokemonspeciesflavortexts","flavor_text","Dimensions","get","StyleSheet","create","flex","margin","borderRadius","alignItems","marginTop","imageContainer","justifyContent","marginHorizontal","textTransform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, Text, View, Image, ImageBackground, Dimensions } from 'react-native'\r\n\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { QueryResult } from './query-result';\r\nimport { backgroundColors } from '../assets/colors'\r\nimport pokeball_bg from '../assets/pokeball_bg.png'\r\nimport { translateType } from '../assets/translate'\r\n\r\nimport * as Speech from 'expo-speech';\r\n\r\n\r\nexport const GET_DETALLES = gql`\r\nquery getDetalles($_eq: Int) {\r\n  pokemon_v2_pokemonspecies(where: {id: {_eq: $_eq}}) {\r\n    pokemon_v2_pokemonspeciesflavortexts(where: {language_id: {_eq: 7}}, limit: 1) {\r\n      flavor_text\r\n    }\r\n    pokemon_v2_pokemonhabitat {\r\n      name\r\n    }\r\n    pokemon_v2_pokemons {\r\n      weight\r\n    }\r\n    pokemon_v2_pokemonshape {\r\n      name\r\n    }\r\n    pokemon_v2_pokemonspeciesnames(where: {language_id: {_eq: 7}}) {\r\n      genus\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n\r\nconst PokemonDetails = ({ route }) => {\r\n\r\n  const { item, type } = route.params\r\n  const { id, name } = item\r\n\r\n  const { loading, error, data } = useQuery(GET_DETALLES, {\r\n    variables: { \"_eq\": id },\r\n  });\r\n  \r\n  // const flavor = data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesflavortexts[0].flavor_text;\r\n  // const genus =  data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesnames[0].genus;\r\n/*   const shape = data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonshape.name;\r\n  const weight = data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons[0].weight;\r\n  const habitat = data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonhabitat.name; */\r\n  \r\n\r\n  console.log(data)\r\n  // error ?? console.log(error)\r\n\r\n  const imageUri = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`\r\n  // const urlDetails = `https://pokeapi.co/api/v2/pokemon-species/${id}`\r\n  const types = item.pokemon_v2_pokemontypes.map(e => e.pokemon_v2_type.name)\r\n\r\n\r\n  const speak = () => {\r\n    Speech.speak(name + \".\" + genus + \".\", {\r\n      rate: 1.1,\r\n      language: 'es-ES',\r\n      pitch: 1,\r\n      voice: \"es-es-x-eed-network\", //masculino agradable menos robo ,ESTE!\r\n      // voice:\"es-us-x-esc-network\"   // fem latino\r\n      // voice:\"es-es-x-eee-local\" //fem\r\n      // voice:\"es-es-x-eef-local\"  //masculino\r\n      // voice:\"es-es-x-eec-local\" //femenino guay\r\n      // voice: \"es-es-x-eea-local\" //femenino robo\r\n      // voice:\"es-es-x-eed-local\" //masculino robo\r\n      // voice:\"es-ES-language\" //fem\r\n      // voice:\"es-es-x-eec-local\" //fem robo\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.screen], { backgroundColor: backgroundColors[type] }}>\r\n      <View style={{ opacity: 0.15.toExponential, paddingTop: 20 }}>\r\n        <ImageBackground source={pokeball_bg} style={{\r\n          width: 200, height: 160, alignSelf: 'flex-end'\r\n        }}\r\n          resizeMode='contain'\r\n        />\r\n      </View>\r\n      <View style={styles.infoCard}>\r\n        <View >\r\n          <Image source={{ uri: imageUri }} style={styles.image} resizeMode='contain' />\r\n        </View>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <View>\r\n            {types[0] && <Text style={[styles.type, { backgroundColor: backgroundColors[types[0]] }]}> {translateType(types[0])} </Text>}\r\n          </View>\r\n          <View>\r\n            {types[1] && <Text style={[styles.type, { backgroundColor: backgroundColors[types[1]] }]}> {translateType(types[1])} </Text>}\r\n          </View>\r\n        </View>\r\n        {loading ? <Text>Cargando...</Text> :\r\n        <Text style={{ color: backgroundColors[type], fontWeight: 'bold', fontSize: 20, padding: 20 }}>\r\n           {data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesnames[0].genus}\r\n           </Text>\r\n        }\r\n        {loading ? <Text>POKEMON</Text> :\r\n          <Text style={{ fontStyle: 'italic', fontSize: 14 }} selectable={true} selectionColor={'gray'}>\r\n            {data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesflavortexts[0].flavor_text}\r\n          </Text>\r\n        }\r\n\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default PokemonDetails\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    height: height,\r\n    // justifyContent:'center',\r\n    alignSelf: 'center',\r\n    flex: 1\r\n  },\r\n  infoCard: {\r\n    margin: 10,\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    // flex:1\r\n    // height:400\r\n  },\r\n  image: {\r\n    // backgroundColor:'lightgreen',\r\n    width: 200,\r\n    height: 200,\r\n    marginTop: -170\r\n\r\n  },\r\n  imageContainer: {\r\n    justifyContent: 'center',\r\n    alignSelf: 'center'\r\n  },\r\n  type: {\r\n    borderRadius: 10,\r\n    padding: 5,\r\n    marginHorizontal: 5,\r\n    textTransform: 'capitalize'\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}