{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useQuery, gql } from '@apollo/client';\nimport { QueryResult } from \"./query-result\";\nimport { backgroundColors, colors } from \"../assets/colors\";\nimport pokeball_bg from \"../assets/pokeball_bg.png\";\nimport pokegif from \"../assets/image11.gif\";\nimport { translateHabitat, translateType } from \"../assets/translate\";\nimport * as Speech from 'expo-speech';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var GET_DETALLES = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\nquery getDetalles($_eq: Int) {\\n  pokemon_v2_pokemonspecies(where: {id: {_eq: $_eq}}) {\\n    pokemon_v2_pokemonspeciesflavortexts(where: {language_id: {_eq: 7}}, limit: 1) {\\n      flavor_text\\n    }\\n    pokemon_v2_pokemonhabitat {\\n      name\\n    }\\n    pokemon_v2_pokemonshape {\\n      name\\n    }\\n    pokemon_v2_pokemonspeciesnames(where: {language_id: {_eq: 7}}) {\\n      genus\\n    }\\n    name\\n    pokemon_v2_pokemons_aggregate {\\n      nodes {\\n        pokemon_v2_pokemonstats {\\n          base_stat\\n          pokemon_v2_stat {\\n            name\\n          }\\n        }\\n      }\\n    }\\n    pokemon_v2_pokemons(where: {id: {_eq: $_eq}}) {\\n      pokemon_v2_pokemontypes {\\n        pokemon_v2_type {\\n          name\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n\"])));\n\nvar PokemonDetails = function PokemonDetails(_ref) {\n  var _Object$keys3;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  console.log(\"Detalles\");\n  console.log(route.params);\n  var id = route.params.id;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      types = _useState2[0],\n      settypes = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setname = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      genus = _useState6[0],\n      setgenus = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      flavor = _useState8[0],\n      setflavor = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      habitat = _useState10[0],\n      sethabitat = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      hp = _useState12[0],\n      sethp = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      attack = _useState14[0],\n      setattack = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      defense = _useState16[0],\n      setdefense = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      speed = _useState18[0],\n      setspeed = _useState18[1];\n\n  var _useQuery = useQuery(GET_DETALLES, {\n    variables: {\n      \"_eq\": id\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var Progress = function Progress(_ref2) {\n    var step = _ref2.step,\n        steps = _ref2.steps,\n        height = _ref2.height;\n    return _jsx(View, {\n      style: {\n        height: height,\n        backgroundColor: 'yellow',\n        overflow: 'hidden'\n      },\n      children: _jsx(View, {\n        style: {\n          height: height,\n          width: '100%',\n          backgroundColor: '#000',\n          overflow: 'hidden',\n          position: 'absolute',\n          left: 0,\n          top: 0\n        }\n      })\n    });\n  };\n\n  var imageUri = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\" + id + \".png\";\n\n  var speak = function speak() {\n    Speech.speak(name + \".\" + data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesflavortexts[0].flavor_text, {\n      rate: 1.1,\n      language: 'es-ES',\n      pitch: 1,\n      voice: \"es-es-x-eed-network\"\n    });\n  };\n\n  if (!loading) {\n    var _Object$keys;\n\n    if (data && ((_Object$keys = Object.keys(data)) == null ? void 0 : _Object$keys.length) > 0 && name != undefined) {\n      speak();\n    }\n  }\n\n  useEffect(function () {\n    var _Object$keys2;\n\n    if (data && ((_Object$keys2 = Object.keys(data)) == null ? void 0 : _Object$keys2.length) > 0) {\n      var _data$pokemon_v2_poke;\n\n      setname(data.pokemon_v2_pokemonspecies[0].name);\n      settypes([data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons[0].pokemon_v2_pokemontypes[0].pokemon_v2_type.name, (_data$pokemon_v2_poke = data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons[0].pokemon_v2_pokemontypes[1]) == null ? void 0 : _data$pokemon_v2_poke.pokemon_v2_type.name]);\n      setflavor(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesflavortexts[0].flavor_text.replace(/\\s+/g, ' ').replace(\".\", \".\\n\"));\n      setgenus(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesnames[0].genus);\n      sethabitat(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonhabitat.name);\n      sethp(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[0].base_stat);\n      setattack(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[1].base_stat);\n      setdefense(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[2].base_stat);\n      setspeed(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[5].base_stat);\n    }\n  }, [data]);\n  useEffect(function () {\n    navigation.addListener('beforeRemove', function (e) {\n      console.log(\"Aqui\");\n      Speech.stop();\n    });\n  }, [navigation, id]);\n\n  var goPokemonList = function goPokemonList() {\n    navigation.navigate(\"Bear Pokedex\");\n  };\n\n  var goNextPokemon = function goNextPokemon() {\n    navigation.push(\"Pokemon Info\", {\n      id: id + 1\n    });\n  };\n\n  var goPreviousPokemon = function goPreviousPokemon() {\n    navigation.push(\"Pokemon Info\", {\n      id: id - 1\n    });\n  };\n\n  return _jsxs(View, {\n    style: [styles.screen, {\n      backgroundColor: backgroundColors[types[0]]\n    }],\n    children: [_jsxs(View, {\n      style: [styles.name],\n      children: [_jsx(TouchableOpacity, {\n        onPress: goPokemonList,\n        children: _jsx(Text, {\n          children: \"Atras\"\n        })\n      }), !loading && name != undefined ? _jsxs(Text, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: 24,\n          paddingTop: 10,\n          color: \"white\"\n        },\n        children: [name.charAt(0).toUpperCase() + name.slice(1), \"\\uD83D\\uDE08\"]\n      }) : _jsx(View, {})]\n    }), _jsx(View, {\n      style: {\n        opacity: 0.15,\n        paddingTop: 30\n      },\n      children: _jsx(ImageBackground, {\n        source: pokeball_bg,\n        style: {\n          width: 200,\n          height: 160,\n          alignSelf: 'flex-end'\n        },\n        resizeMode: \"contain\"\n      })\n    }), _jsxs(View, {\n      style: styles.infoCard,\n      children: [_jsxs(View, {\n        children: [_jsx(Image, {\n          source: {\n            uri: imageUri\n          },\n          style: styles.image,\n          resizeMode: \"contain\"\n        }), _jsx(TouchableOpacity, {\n          style: {\n            backgroundColor: \"blue\",\n            right: 0\n          },\n          onPress: function onPress() {\n            return goNextPokemon();\n          },\n          children: _jsx(Text, {\n            children: \"Next\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        children: [_jsx(View, {\n          children: types[0] && _jsxs(Text, {\n            style: [styles.type, {\n              backgroundColor: backgroundColors[types[0]]\n            }],\n            children: [\" \", translateType(types[0]), \" \"]\n          })\n        }), _jsx(View, {\n          children: types[1] && _jsxs(Text, {\n            style: [styles.type, {\n              backgroundColor: backgroundColors[types[1]]\n            }],\n            children: [\" \", translateType(types[1]), \" \"]\n          })\n        })]\n      }), !(data && ((_Object$keys3 = Object.keys(data)) == null ? void 0 : _Object$keys3.length) > 0) ? _jsx(Image, {\n        source: pokegif,\n        style: {\n          height: 179,\n          width: 320\n        }\n      }) : _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            color: backgroundColors[types[0]],\n            fontWeight: 'bold',\n            fontSize: 20,\n            padding: 18,\n            textAlign: 'center'\n          },\n          children: genus\n        }), _jsx(Text, {\n          selectable: true,\n          selectionColor: 'gray',\n          children: flavor\n        }), _jsxs(View, {\n          children: [_jsxs(View, {\n            style: styles.row,\n            children: [_jsx(Text, {\n              children: \"HP\"\n            }), _jsx(Text, {\n              children: hp\n            }), _jsx(Progress, {\n              step: 1,\n              steps: 101,\n              height: 20\n            })]\n          }), _jsxs(View, {\n            style: styles.row,\n            children: [_jsx(Text, {\n              children: \"ATTACK\"\n            }), _jsx(Text, {\n              children: attack\n            })]\n          }), _jsxs(View, {\n            style: styles.row,\n            children: [_jsx(Text, {\n              children: \"DEFENSE\"\n            }), _jsx(Text, {\n              children: defense\n            })]\n          }), _jsxs(View, {\n            style: styles.row,\n            children: [_jsx(Text, {\n              children: \"SPEED\"\n            }), _jsx(Text, {\n              children: speed\n            })]\n          })]\n        }), _jsxs(Text, {\n          style: styles.habitat,\n          children: [\"Habita en \", translateHabitat(habitat)]\n        })]\n      })]\n    })]\n  });\n};\n\nexport default PokemonDetails;\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar styles = StyleSheet.create({\n  screen: {\n    height: height,\n    width: width,\n    alignSelf: 'center',\n    flex: 1\n  },\n  name: {\n    paddingTop: 35,\n    paddingLeft: 21\n  },\n  infoCard: {\n    margin: 10,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    alignItems: 'center',\n    padding: 20\n  },\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginTop: -170\n  },\n  imageContainer: {\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  type: {\n    borderRadius: 10,\n    padding: 5,\n    marginHorizontal: 5,\n    textTransform: 'capitalize'\n  },\n  habitat: {\n    padding: 5,\n    marginHorizontal: 5,\n    fontStyle: 'italic'\n  }\n});","map":{"version":3,"sources":["D:/Expo/pokedex-app/components/PokemonDetails.js"],"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","useQuery","gql","QueryResult","backgroundColors","colors","pokeball_bg","pokegif","translateHabitat","translateType","Speech","GET_DETALLES","PokemonDetails","route","navigation","console","log","params","id","types","settypes","name","setname","genus","setgenus","flavor","setflavor","habitat","sethabitat","hp","sethp","attack","setattack","defense","setdefense","speed","setspeed","variables","loading","error","data","Progress","step","steps","height","backgroundColor","overflow","width","position","left","top","imageUri","speak","pokemon_v2_pokemonspecies","pokemon_v2_pokemonspeciesflavortexts","flavor_text","rate","language","pitch","voice","Object","keys","length","undefined","pokemon_v2_pokemons","pokemon_v2_pokemontypes","pokemon_v2_type","replace","pokemon_v2_pokemonspeciesnames","pokemon_v2_pokemonhabitat","pokemon_v2_pokemons_aggregate","nodes","pokemon_v2_pokemonstats","base_stat","addListener","e","stop","goPokemonList","navigate","goNextPokemon","push","goPreviousPokemon","styles","screen","fontWeight","fontSize","paddingTop","color","charAt","toUpperCase","slice","opacity","alignSelf","infoCard","uri","image","right","flexDirection","type","padding","textAlign","row","Dimensions","get","StyleSheet","create","flex","paddingLeft","margin","borderRadius","alignItems","flexWrap","marginTop","imageContainer","justifyContent","marginHorizontal","textTransform","fontStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, Text, View, Image, ImageBackground, Dimensions, TouchableOpacity } from 'react-native'\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { QueryResult } from './query-result';\r\nimport { backgroundColors, colors } from '../assets/colors'\r\nimport pokeball_bg from '../assets/pokeball_bg.png'\r\nimport pokegif from '../assets/image11.gif'\r\nimport { translateHabitat, translateType } from '../assets/translate'\r\n\r\nimport * as Speech from 'expo-speech';\r\n\r\n\r\nexport const GET_DETALLES = gql`\r\nquery getDetalles($_eq: Int) {\r\n  pokemon_v2_pokemonspecies(where: {id: {_eq: $_eq}}) {\r\n    pokemon_v2_pokemonspeciesflavortexts(where: {language_id: {_eq: 7}}, limit: 1) {\r\n      flavor_text\r\n    }\r\n    pokemon_v2_pokemonhabitat {\r\n      name\r\n    }\r\n    pokemon_v2_pokemonshape {\r\n      name\r\n    }\r\n    pokemon_v2_pokemonspeciesnames(where: {language_id: {_eq: 7}}) {\r\n      genus\r\n    }\r\n    name\r\n    pokemon_v2_pokemons_aggregate {\r\n      nodes {\r\n        pokemon_v2_pokemonstats {\r\n          base_stat\r\n          pokemon_v2_stat {\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n    pokemon_v2_pokemons(where: {id: {_eq: $_eq}}) {\r\n      pokemon_v2_pokemontypes {\r\n        pokemon_v2_type {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\n\r\n\r\nconst PokemonDetails = ({ route, navigation }) => {\r\n  \r\n  console.log(\"Detalles\")\r\n  console.log(route.params)\r\n  const { id } = route.params\r\n  const [types, settypes] = useState([])\r\n  const [name, setname] = useState()\r\n  const [genus, setgenus] = useState()\r\n  const [flavor, setflavor] = useState()\r\n  const [habitat, sethabitat] = useState()\r\n  const [hp, sethp] = useState()\r\n  const [attack, setattack] = useState()\r\n  const [defense, setdefense] = useState()\r\n  const [speed, setspeed] = useState()\r\n  \r\n  const { loading, error, data } = useQuery(GET_DETALLES, {\r\n    variables: { \"_eq\": id },\r\n  });\r\n  \r\n  const Progress = ({step,steps,height}) => {\r\n    return (\r\n      <View style={{\r\n        height,\r\n        backgroundColor:'yellow',\r\n        overflow:'hidden'\r\n      }}>\r\n        <View style={{\r\n        height,\r\n        width:'100%',\r\n        backgroundColor:'#000',\r\n        overflow:'hidden',\r\n        position:'absolute',\r\n        left:0,\r\n        top:0\r\n      }}></View>\r\n      </View>\r\n    )\r\n  } \r\n\r\n  const imageUri = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`\r\n\r\n\r\n  const speak = () => {\r\n    Speech.speak(name + \".\" +\r\n    data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesflavortexts[0].flavor_text, {\r\n      rate: 1.1,\r\n      language: 'es-ES',\r\n      pitch: 1,\r\n      voice: \"es-es-x-eed-network\"\r\n    });\r\n  };\r\n  if(!loading){\r\n    if(data && Object.keys(data)?.length>0 && name!=undefined){\r\n      speak();\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(data && Object.keys(data)?.length>0){\r\n      setname(data.pokemon_v2_pokemonspecies[0].name)\r\n      settypes([data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons[0].pokemon_v2_pokemontypes[0].pokemon_v2_type.name , data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons[0].pokemon_v2_pokemontypes[1]?.pokemon_v2_type.name])\r\n      setflavor(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesflavortexts[0].flavor_text.replace(/\\s+/g, ' ').replace(\".\",\".\\n\"))\r\n      setgenus(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonspeciesnames[0].genus)\r\n      sethabitat(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemonhabitat.name)\r\n      sethp(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[0].base_stat)\r\n      setattack(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[1].base_stat)\r\n      setdefense(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[2].base_stat)\r\n      setspeed(data.pokemon_v2_pokemonspecies[0].pokemon_v2_pokemons_aggregate.nodes[0].pokemon_v2_pokemonstats[5].base_stat)\r\n    }\r\n  }, [data])\r\n  \r\n  useEffect(() => {\r\n    navigation.addListener('beforeRemove', (e) => {\r\n      console.log(\"Aqui\")\r\n      Speech.stop()\r\n    }\r\n  )}, [navigation,id])\r\n  \r\n  const goPokemonList = () => {navigation.navigate(\"Bear Pokedex\")}\r\n  const goNextPokemon = () => {navigation.push(\"Pokemon Info\", {\r\n    id : id+1\r\n  })}\r\n  const goPreviousPokemon = () => {navigation.push(\"Pokemon Info\", {\r\n    id : id-1\r\n  })}\r\n\r\n  return (\r\n    <View style={[styles.screen, { backgroundColor: backgroundColors[types[0]] }]}>\r\n      <View style={[styles.name]}>\r\n      <TouchableOpacity\r\n        onPress={goPokemonList}\r\n        >\r\n        <Text>Atras</Text>\r\n      </TouchableOpacity>\r\n      {!loading && name !=undefined ?\r\n      <Text style={{ fontWeight: 'bold', fontSize: 24, paddingTop: 10, color: \"white\" }}>\r\n          {name.charAt(0).toUpperCase() + name.slice(1)}😈\r\n        </Text>\r\n        \r\n        :\r\n        <View></View>\r\n      }\r\n      </View>\r\n      <View style={{ opacity: 0.15, paddingTop: 30 }}>\r\n        <ImageBackground source={pokeball_bg} style={{\r\n          width: 200, height: 160, alignSelf: 'flex-end'\r\n        }}\r\n          resizeMode='contain'\r\n        />\r\n      </View>\r\n      <View style={styles.infoCard}>\r\n      \r\n        <View >\r\n          <Image source={{ uri: imageUri }} style={styles.image} resizeMode='contain' />\r\n          \r\n            <TouchableOpacity style={{backgroundColor:\"blue\",right:0}}\r\n            onPress={()=>goNextPokemon()}\r\n            >\r\n              <Text>Next</Text>\r\n            </TouchableOpacity>\r\n          \r\n        </View>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <View>\r\n            {types[0] && <Text style={[styles.type, { backgroundColor: backgroundColors[types[0]] }]}> {translateType(types[0])} </Text>}\r\n          </View>\r\n          <View>\r\n            {types[1] && <Text style={[styles.type, { backgroundColor: backgroundColors[types[1]] }]}> {translateType(types[1])} </Text>}\r\n          </View>\r\n        </View>\r\n        \r\n        {!(data && Object.keys(data)?.length>0) ?\r\n         <Image\r\n        //  source={{uri: 'https://media.giphy.com/media/xTiTnoHt2NwerFMsCI/giphy.gif'}}\r\n         source={pokegif}\r\n         style={{\r\n           height: 179,\r\n           width: 320,\r\n         }}\r\n       />\r\n         :\r\n           <View>\r\n          <Text style={{ color: backgroundColors[types[0]], fontWeight: 'bold', fontSize: 20, padding: 18, textAlign:'center' }}>\r\n           {genus}\r\n          </Text>\r\n            <Text selectable={true} selectionColor={'gray'}>\r\n              {flavor}\r\n            </Text>\r\n\r\n            {/* Aqui poner STATS */}\r\n            <View>\r\n              <View style={styles.row}>\r\n                <Text>HP</Text>\r\n                <Text>{hp}</Text>\r\n                <Progress step={1} steps={101} height={20}/>\r\n              </View>\r\n              <View style={styles.row}>\r\n                <Text>ATTACK</Text>\r\n                <Text>{attack}</Text>\r\n              </View>\r\n              <View style={styles.row}>\r\n                <Text>DEFENSE</Text>\r\n                <Text>{defense}</Text>\r\n              </View>\r\n              <View style={styles.row}>\r\n                <Text>SPEED</Text>\r\n                <Text>{speed}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <Text style={styles.habitat}>\r\n              Habita en {translateHabitat(habitat)}\r\n            </Text>\r\n          </View>\r\n        }\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default PokemonDetails\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    height: height,\r\n    width: width,\r\n    // justifyContent:'center',\r\n    alignSelf: 'center',\r\n    flex: 1\r\n  },\r\n  name: {\r\n    paddingTop: 35,\r\n    paddingLeft: 21\r\n  },\r\n  infoCard: {\r\n    margin: 10,\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    // flex:1\r\n    // height:400\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  image: {\r\n    // backgroundColor:'lightgreen',\r\n    width: 200,\r\n    height: 200,\r\n    marginTop: -170\r\n\r\n  },\r\n  imageContainer: {\r\n    justifyContent: 'center',\r\n    alignSelf: 'center'\r\n  },\r\n  type: {\r\n    borderRadius: 10,\r\n    padding: 5,\r\n    marginHorizontal: 5,\r\n    textTransform: 'capitalize'\r\n  },\r\n  habitat: {\r\n    padding: 5,\r\n    marginHorizontal: 5,\r\n    fontStyle: 'italic'\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}